package com.mike.client.frontend.till;

import com.mike.client.frontend.till.tillMenu.TillMenuView;

import javax.swing.*;

/**
 * @author mbbx9mg3
 */
public class TillView extends javax.swing.JFrame
{
  //  private TillClient parent;
    private TillClientController tillClientController;
    
    /**
     * Creates new form TillClient
     */
    public TillView(TillClientController tillClientController) {
        super();
        this.tillClientController = tillClientController;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setStartClientButton(new JButton());
        startClientButton.addActionListener(tillClientController);
        changeLabel = new javax.swing.JLabel();
        changeOutputLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        getStartClientButton().setText("Start Till Client");

        changeLabel.setText("Change:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(getStartClientButton()))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(changeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(changeOutputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(getStartClientButton())
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(changeLabel)
                    .addComponent(changeOutputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(140, Short.MAX_VALUE))
        );

//        getStartClientButton().addActionListener(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       
        int confirm = JOptionPane.showOptionDialog(null, 
            "Are You Sure to Close Application?", "Exit Confirmation", 
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, 
            null, null, null);
                
        if (confirm == 0) {

//            try
//            {
//                // TODO add your handling code here:
//                menu.con.close();
//                LeaveRequest leaveRequest = new LeaveRequest(
//                    InetAddress.getByName(
//                        parent.client.
//                    getLocalAddress().getHostName()),
//                    InetAddress.getByName(
//                        parent.serverAddress.getHostName()));
//                parent.getOutputStream().writeObject(leaveRequest);
//            } catch (SQLException ex) {
//                Logger.getLogger(TillGUI.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (UnknownHostException ex) {
//                Logger.getLogger(TillGUI.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (IOException ex) {
//                Logger.getLogger(TillGUI.class.getName()).log(Level.SEVERE, null, ex);
//            }
        }
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel changeLabel;
    private javax.swing.JLabel changeOutputLabel;
    private javax.swing.JButton startClientButton;
    // End of variables declaration//GEN-END:variables


    
    public JLabel getChangeOutputLabel()
    {
        return changeOutputLabel;
    }
    public JButton getStartClientButton() {return startClientButton;}
	public void setStartClientButton(JButton startClientButton) {this.startClientButton = startClientButton;}
}