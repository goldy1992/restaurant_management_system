package com.mike.client.frontend.MainMenu.voidItemMenu;

import com.mike.client.frontend.MainMenu.voidItemMenu.voidItem.VoidItem;
import com.mike.client.frontend.Pair;
import com.mike.item.Item;
import com.mike.item.Tab;
import org.apache.log4j.Logger;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.*;
import java.util.List;


/**
 * Created by Mike on 24/02/2017.
 */
public class VoidItemMenuView extends JDialog {

    final static Logger logger = Logger.getLogger(VoidItemMenuView.class);

    private final JButton submitButton = new JButton("Submit");
    private final JButton cancelButton = new JButton("Cancel");
    private ArrayList<Pair<Pair<JCheckBox, Item>, Pair<Component, Component>>> cBoxesOldTab;
    private ArrayList<Pair<Pair<JCheckBox, Item>, Pair<Component, Component>>> cBoxesNewTab;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel mainPanel;
    private JScrollPane mainPanelScrollPane;
    private JPanel titlePanel;
    private JPanel exitPanel;

    // End of variables declaration//GEN-END:variables


    /**
     * Creates new form VoidItemsDialog
     * @param parent
     * @param modal
     * @param newTab
     * @param oldTab
     */
    public VoidItemMenuView(Dialog parent, boolean modal, Tab newTab, Tab oldTab, ActionListener voidItemMenuController, List<VoidItem> voidItemList) {
        super(parent, modal);
        cBoxesOldTab = addCheckBoxes(oldTab);
        cBoxesNewTab = addCheckBoxes(newTab);
        initComponents(voidItemList);
        submitButton.addActionListener(voidItemMenuController);
        cancelButton.addActionListener(voidItemMenuController);
        exitPanel = new JPanel();
        exitPanel.setLayout(new GridLayout(1,0));
        getContentPane().add(exitPanel);
        exitPanel.add(getSubmitButton());
        exitPanel.add(getCancelButton());
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(List<VoidItem> voidItems) {

        titlePanel = new javax.swing.JPanel();
        mainPanelScrollPane = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));
        getContentPane().add(titlePanel);
        titlePanel.setLayout(new GridLayout(0,3));
        titlePanel.add(new JLabel("Item"));
        titlePanel.add(new JLabel("Wastage"));
        titlePanel.add(new JLabel("Amount"));

        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.LINE_AXIS));
        mainPanelScrollPane.setViewportView(mainPanel);
        mainPanel.setLayout(new GridLayout(0, 3));

        for (VoidItem i : voidItems) {
            mainPanel.add(i.getVoidItemView().getCheckBox());
            mainPanel.add(i.getVoidItemView().getWastageOption());
            mainPanel.add(i.getVoidItemView().getAmountOption());
        }
        getContentPane().add(mainPanelScrollPane);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private ArrayList<Pair<Pair<JCheckBox, Item>, Pair<Component, Component>>> addCheckBoxes(Tab tab) {
        ArrayList<Pair<Pair<JCheckBox, Item>, Pair<Component, Component>>>
                returnList = new ArrayList<>();
        return returnList;
    }  // add check boxes

    public void startDialog() {
        this.setVisible(true);
    }

    public JButton getSubmitButton() { return submitButton; }
    public JButton getCancelButton() { return cancelButton; }

    public ArrayList<Pair<Pair<JCheckBox, Item>, Pair<Component, Component>>> getcBoxesOldTab() { return cBoxesOldTab; }
    public ArrayList<Pair<Pair<JCheckBox, Item>, Pair<Component, Component>>> getcBoxesNewTab() { return cBoxesNewTab; }



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            logger.error(ex);
        } catch (InstantiationException ex) {
            logger.error(ex);
        } catch (IllegalAccessException ex) {
            logger.error(ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            logger.error(ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                VoidItemsDialog dialog = new VoidItemsDialog(new JDialog(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

}
